/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package de.foopara.phpcsmd.ui.reports;

import de.foopara.phpcsmd.exec.pdepend.PdependTypes;
import javax.swing.JProgressBar;

/**
 *
 * @author n.specht
 */
public class PdependMetricsPanel extends PdependGenericResultPanel {

    /**
     * Creates new form PdependMetricsPanel
     */
    public PdependMetricsPanel() {
        initComponents();
        this.addLabel("pdepend", "Pdepend Version");
        this.addLabel("generated", "Generated");

        this.addSeparator(null, "Counts");
        this.addLabel("nop", "Number of Packages");
        this.addLabel("noc", "Number of Classes");
        this.addLabel("noi", "Number of Interfaces");
        this.addLabel("nom", "Number of Methods");
        this.addLabel("nof", "Number of Functions");

        this.addSeparator(null, "Classes");
        this.addLabel("roots", "Number of Root Classes");
        this.addLabel("leafs", "Number of Leaf (final) Classes");

        this.addLabel("clsc", "Number of Concrete Classes");
        this.addLabel("clsa", "Number of Abstract Classes");

        this.addLabel("ahh", "Average Hierarchy Height");
        this.addLabel("andc", "Average Number of Derived Classes");

        this.addSeparator(null, "Complexity");
        this.addLabel("ccn", "Cyclomatic Complexity");
        this.addLabel("ccn2", "Cyclomatic Complexity Number");



        this.addSeparator(null, "Codelines");
        this.addLabel("loc", "Lines of Code");
        this.addProgressbar("ncloc", "Non Comment Lines of Code");
        this.addProgressbar("cloc", "Comment Lines of Code");
        this.addProgressbar("eloc", "Executable Lines of Code");
        this.addProgressbar("lloc", "Logical Lines Of Code");

        this.addSeparator(null, null);
        this.addLabel("calls", "Number of Method or Function Calls");
        this.addLabel("fanout", "Number of Fanouts");



    }

    public void setMetrics(PdependTypes.PdependMetrics metrics) {
        ((JProgressBar)this.elements.get("ncloc")).setMaximum(metrics.loc);
        ((JProgressBar)this.elements.get("cloc")).setMaximum(metrics.loc);
        ((JProgressBar)this.elements.get("eloc")).setMaximum(metrics.loc);
        ((JProgressBar)this.elements.get("lloc")).setMaximum(metrics.loc);

        this.setFields(metrics);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.GridBagLayout());
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
